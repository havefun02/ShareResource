@model ShareResource.Models.ViewModels.MainPageViewModel
@{
    ViewData["Title"] = "Main";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="main-page">
    @await Html.PartialAsync("_Gallery", Model.Imgs)
    @await Html.PartialAsync("_PaginationComponent", Model.Pagination)
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            $("#prevPage").click( async function () {
                const currentPage = parseInt($(".current-page").text());
                if (currentPage > 1) {
                    updateUrl(currentPage - 1);
                    await fetchGlobalPage(currentPage - 1);
                }
            });

            $("#nextPage").click(async function () {
                console.log("next page");
                const currentPage = parseInt($(".current-page").text());
                updateUrl(currentPage + 1);
                await fetchGlobalPage(currentPage + 1);

            });

            $(document).on('click', '.page-btn', function () {
                const page = $(this).data('page'); 
                updateUrl(page); // Update the URL with the new page
                fetchGlobalPage(page); // Fetch data for the selected page
            });
            function updatePagination(totalPages,currentPage) {
                $("#pageNumbers").empty(); 
                for (let i = 1; i <= totalPages; i++) {
                    const isCurrent = i === currentPage ? "current-page" : "";
                    $("#pageNumbers").append(`<button class="page-btn ${isCurrent}" data-page="${i}">${i}</button>`);
                }

                $("#prevPage").prop("disabled", currentPage === 1);
                $("#nextPage").prop("disabled", currentPage === totalPages);
            }

            function fetchGlobalPage(page) {
                console.log("Fetch",page);
                $.ajax({
                    url: `api/v1/resources?page=${page}`,
                    method: 'GET',
                    success: function (data) {
                        $('#gallery').empty();
                        if (data.length > 0) {
                            data.forEach(function (image) {
                                const uploadDate = new Date(image.uploadDate);

                                const options = { day: '2-digit', month: 'short', year: 'numeric' };
                                const formattedDate = uploadDate.toLocaleDateString('en-GB', options).replace(/,/g, ''); // Remove any commas

                                const imgHtml = `
                                    <div class="col-md-4">
                                        <div class="card mb-4">
                                            <img src="${image.fileUrl}" class="card-img-top" alt="${image.fileName} data-imgid="${image.ImgId}">
                                            <div class="card-body">
                                                <h5 class="card-title">${image.fileName}</h5>
                                                                                        <p class="card-text">Uploaded on: ${formattedDate}</p>
                                            </div>
                                        </div>
                                    </div>`;
                                $('#gallery').append(imgHtml);

                            });
                            updatePagination(Math.ceil(@Model.Pagination!.total/@Model.Pagination.limit), page);

                        } else {
                            $('#gallery').append('<div>No items found</div>');
                        }
                    },
                    error: function () {
                        alert('Failed to load data.');
                    }
                });
            }
            function updateUrl(page) {
                const url = new URL(window.location);
                url.searchParams.set('page', page);
                window.history.pushState({}, '', url); 
            }
        });
    </script>
}

